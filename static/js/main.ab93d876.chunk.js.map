{"version":3,"sources":["logo.svg","components/input.js","components/main.js","components/dashItem.js","components/dash.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","state","type","memo","money","numberWithCommas","x","toString","replace","className","style","width","textAlign","fontSize","fontWeight","this","props","value","borderColor","onChange","event","setState","target","thousandSeparator","suffix","Button","variant","onClick","a","async","console","log","handleSubmit","React","Component","Main","start","end","separator","duration","preMoney","currentMoney","plus","minus","handleClickPlus","handleClickMinus","active","DashItem","id","title","date","onRemove","getMonth","slice","getDate","color","getHours","getMinutes","e","Dash","item","dashItem","map","key","Date","borderTop","length","App","saveItem","localStorage","setItem","JSON","stringify","_handleClickMinus","_handleClickPlus","_handleRemove","result","filter","it","parseInt","_handleSubmit","info","concat","getItem","parse","src","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab93d876.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport './input.css';\nimport { Button } from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n\nclass Input extends React.Component {\n\n  state = {\n    type:\"\",\n    memo : \"\",\n    money: \"\"\n  }\n\n\n  numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n\n    return(\n      <div className=\"input-wrap\">\n        <div style={{width:\"100%\",textAlign:\"center\",fontSize:20,fontWeight:2000}}>{this.props.type==\"plus\"?\"입금\":\"출금\"}</div>\n        <span className=\"item-title\">메모</span><br />\n        <input className=\"memo\" value={this.state.memo} style={{borderColor:this.props.type == \"plus\"?\"blue\":\"black\"}} onChange={event => this.setState({memo: event.target.value})} />\n        <span className=\"item-title\">금액</span><br />\n        <div className=\"wrap-memo\">\n        <NumberFormat className=\"memo-money\" type={'tel'} style={{borderColor:this.props.type == \"plus\"?\"blue\":\"black\"}} onChange={event => this.setState({money: event.target.value.replace(/(,)/g,'')})} thousandSeparator={true} suffix={'원'} />\n          <Button className=\"memo-button\" variant={this.props.type == \"plus\"?\"primary\":\"dark\"} onClick={async (event) => {\n              await this.setState({type : this.props.type})\n              console.log(this.state)\n              return this.props.handleSubmit(this.state)\n            }}><span>등록</span></Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Input;\n","import React from 'react';\nimport Input from './input'\nimport './main.css';\nimport { Button } from 'react-bootstrap';\nimport CountUp from 'react-countup';\n\nclass Main extends React.Component {\n\n  state = {\n    start : 0,\n    end : 0\n  }\n\n  numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n    render() {\n    \n\n    return(\n      <div className=\"wrap\">\n        <span className=\"money-title\">현재 금액</span><br />\n        <span className=\"money\"><CountUp separator=\",\" duration={2} start={this.props.preMoney} end={this.props.currentMoney} />원</span>\n        <div className=\"wrap-item\">\n          <div className=\"add\">\n            <span className=\"item-title\">입금</span><br />\n            <span className=\"item-money\">{this.numberWithCommas(this.props.plus)}원</span>\n          </div>\n          <div className=\"minus\">\n            <span className=\"item-title\">출금</span><br />\n            <span className=\"item-money\">{this.numberWithCommas(this.props.minus)}원</span>\n          </div>\n        </div>\n        <div className=\"line\" />\n        <div className=\"wrap-button\">\n          <Button className=\"plus-button\" variant=\"primary\" onClick={this.props.handleClickPlus}><span>+</span></Button>\n          <Button className=\"minus-button\" variant=\"dark\" onClick={this.props.handleClickMinus}><span>-</span></Button>\n        </div>\n        {this.props.active && <Input handleSubmit={this.props.handleSubmit} type = {this.props.type} />}\n      </div>\n    )\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport './dash.css';\nimport { Button } from 'react-bootstrap';\n\n\nclass DashItem extends React.Component {\n\n  numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    let {id, title, money, date, onRemove, type} = this.props\n    return(\n      <div className=\"dash-item\">\n          <div className=\"day\">\n            {(\"0\" + date.getMonth()+1).slice(-2)}.{(\"0\" + date.getDate()).slice(-2)}<br />\n            <span style={{color:\"gray\" ,fontWeight:100}}>{(\"0\" + date.getHours()).slice(-2)}:{(\"0\" + date.getMinutes()).slice(-2)}</span>\n          </div>\n          <div className=\"dash-content\">\n            <span className=\"dash-title\">{title}</span><br />\n            <span className=\"dash-money\" style={{fontSize:19,color: type == \"plus\"?\"blue\":\"black\"}}>{type == \"plus\"?\"+ \":\"- \"}{this.numberWithCommas(money)}원</span>\n          </div>\n          <div className=\"close-wrap\">\n           <i style={{fontSize:25}} className=\"icon close ion-md-close\" onClick={(e) => {\n            // e.stopPropagation() // onToggle 이 실행되지 않도록 함\n            onRemove(id)}\n            }></i>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default DashItem;\n","import React from 'react';\nimport './dash.css';\nimport DashItem from './dashItem'\n\nclass Dash extends React.Component {\n\n  componentDidMount() {\n    console.log(this.props.item)\n  }\n\n  render() {\n    const dashItem = this.props.item.map(({id,type,title,date,money}) => (\n      <DashItem\n        key = {id}\n        id = {id}\n        title = {title}\n        date = {new Date(date)}\n        money = {money}\n        type = {type}\n        onRemove={this.props.onRemove}\n      />\n\n    ))\n\n    return(\n      <div className=\"dash-wrap\" style={{borderTop:this.props.item.length == 0?\"none\":\"1px solid gray\"}}>\n        {dashItem}\n      </div>\n    )\n  }\n}\n\nexport default Dash;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './components/main'\nimport Dash from './components/dash'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass App extends React.Component {\n\n  \n\n  state = {\n    id: 0,\n    preMoney:0,\n    currentMoney:0,\n    plus:0,\n    minus:0,\n    item : [],\n    active : false,\n    type: \"\"\n  }\n\n  componentWillMount() {\n\n    let state = localStorage.getItem('state')\n    console.log(JSON.parse(state))\n    if( state != null){\n      this.setState(JSON.parse(state));\n    }\n  }\n\n  saveItem = () => {\n    localStorage.setItem('state',JSON.stringify(this.state))\n  }\n\n  _handleClickMinus = () => {\n    this.setState({\n      type:\"minus\",\n      active: !this.state.active\n    },this.saveItem)\n  }  \n\n  _handleClickPlus = () => {\n    this.setState({\n      type:\"plus\",\n      active: !this.state.active\n    },this.saveItem)\n  }  \n\n  _handleRemove = (id) => {\n    const { item } = this.state\n    let result = item.filter(it => it.id == id)[0]\n    this.setState({\n      item: item.filter(it => it.id !== id),\n      preMoney: this.state.currentMoney,\n      currentMoney: result.type == \"plus\"? this.state.currentMoney - result.money : this.state.currentMoney + result.money,\n      [result.type]: result.type == \"plus\"? this.state.plus - parseInt(result.money) : this.state.minus - parseInt(result.money)\n    },this.saveItem);\n  }\n  \n  _handleSubmit = (info) => {\n    this.setState({\n      preMoney: this.state.currentMoney,\n      currentMoney: info.type == \"plus\"? this.state.currentMoney + parseInt(info.money) : this.state.currentMoney - parseInt(info.money),\n      [info.type] : info.type == \"plus\"? this.state.plus + parseInt(info.money) : this.state.minus + parseInt(info.money),\n      active: false,\n      item: [{\n        id: this.state.id++,\n        title: info.memo,\n        money: parseInt(info.money),\n        type : this.state.type,\n        date: new Date()\n      }].concat(this.state.item)\n    },this.saveItem)\n  }\n\n  render() {\n    return(\n      <div style={{textAlign:\"center\"}}>\n        <img src=\"./flood.png\" width=\"30%\" />\n        <Main \n          active={this.state.active} \n          handleSubmit = {this._handleSubmit}\n          handleClickPlus = {this._handleClickPlus}\n          handleClickMinus = {this._handleClickMinus}\n          type={this.state.type}\n          currentMoney = {this.state.currentMoney}\n          preMoney = {this.state.preMoney}\n          plus = {this.state.plus}\n          minus = {this.state.minus}\n        />\n        <Dash \n          item = {this.state.item}\n          onRemove = {this._handleRemove}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}